///******************************************************************
// * Generated by Hottentot JAVA Generator
// * Date:
// * Name:
// * Description:
// ******************************************************************/
//package ir.ntnaeem.hottentot.examples.listtest.hotgen;
//
//import ir.ntnaeem.hottentot.serializerHelper.DataLengthByteArrayMaker;
//import java.util.ArrayList;
//import java.util.Arrays;
//import java.util.List;
//import ir.ntnaeem.hottentot.serializerHelper.ByteArrayToInteger;
//import ir.ntnaeem.hottentot.type._Int16;
//
//public class Serializableuint16List {
//
//  private List<Short> uint16List;
//
//  public Serializableuint16List() {
//    uint16List = new ArrayList<Short>();
//  }
//
//  public List<Short> getuint16List() {
//    return uint16List;
//  }
//
//  public void setuint16List(List<Short> uint16List) {
//    this.uint16List = uint16List;
//  }
//
//  public byte[] serialize() {
//    if (uint16List.size() != 0) {
//      int counter = 0;
//      int dataLength = 0;
//      //calculate serializeduint16ListLength
//      for (Short uint16 : uint16List) {
//        _Int16 int16 = new _Int16(uint16);
//        byte[] serializeduint16 = int16.serialize();
//        byte[] uint16LengthByteArray =
//          DataLengthByteArrayMaker.getByteArray(serializeduint16.length);
//        dataLength += uint16LengthByteArray.length + serializeduint16.length;
//      }
//      byte[] serializeduint16List = new byte[dataLength];
//      for (Short uint16 : uint16List) {
//        _Int16 int16 = new _Int16(uint16);
//        byte[] serializeduint16 = int16.serialize();
//        int serializeduint16Length = serializeduint16.length;
//        byte[] uint16LengthByteArray =
//          DataLengthByteArrayMaker.getByteArray(serializeduint16Length);
//        System.arraycopy(uint16LengthByteArray, 0, serializeduint16List, counter, uint16LengthByteArray.length);
//        counter += uint16LengthByteArray.length;
//        System.arraycopy(serializeduint16, 0, serializeduint16List, counter, serializeduint16.length);
//        counter += serializeduint16.length;
//      }
//      return serializeduint16List;
//    }
//    return new byte[0];
//  }
//
//  public void deserialize(byte[] serializeduint16List) {
//    if(serializeduint16List.length != 0) {
//      int counter = 0;
//      int serializeduint16ByteArrayLength = 0 ;
//      while (true) {
//        if (counter == serializeduint16List.length) {
//          break;
//        }
//        int firstLengthByte = serializeduint16List[counter];
//        int numOfByteForLength = 1;
//        if ((firstLengthByte & 0x80) == 0) {
//          serializeduint16ByteArrayLength = serializeduint16List[counter];
//        } else {
//          counter++;
//          numOfByteForLength = firstLengthByte & 0x0f;
//          byte[] serializeduint16LengthByteArray = new byte[numOfByteForLength];
//          int serializedDataWrapperLengthByteArrayCounter = 0;
//          for (int i = counter; i < counter + numOfByteForLength; i++) {
//            serializeduint16LengthByteArray[serializedDataWrapperLengthByteArrayCounter++] = serializeduint16List[i];
//          }
//          serializeduint16ByteArrayLength = ByteArrayToInteger.getInt(serializeduint16LengthByteArray);
//        }
//        counter += numOfByteForLength;
//        byte[] uint16ByteArray = new byte[serializeduint16ByteArrayLength];
//        int uint16ByteArrayCounter = 0;
//        for (int i = counter; i < counter + serializeduint16ByteArrayLength; i++) {
//          uint16ByteArray[uint16ByteArrayCounter++] = serializeduint16List[i];
//        }
//        counter += serializeduint16ByteArrayLength;
//        _Int16 uint16 = new _Int16();
//        uint16.deserialize(uint16ByteArray);
//        uint16List.add(uint16.getValue());
//      }
//    }
//  }
//}