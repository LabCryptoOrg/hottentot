/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date:
 * Name:
 * Description:
 ******************************************************************/
package ir.ntnaeem.hottentot.examples.listtest.hotgen_correct;

import ir.ntnaeem.hottentot.serializerHelper.DataLengthByteArrayMaker;

import java.util.ArrayList;
import java.util.List;

import ir.ntnaeem.hottentot.serializerHelper.ByteArrayToInteger;
import ir.ntnaeem.hottentot.type.*;

public class SerializableStringList {

  private List<String> stringList;

  public SerializableStringList() {
    stringList = new ArrayList<String>();
  }

  public List<String> getStringList() {
    return stringList;
  }

  public void setStringList(List<String> stringList) {
    this.stringList = stringList;
  }

  public byte[] serialize() {
    if (stringList.size() != 0) {
      int counter = 0;
      int dataLength = 0;
      //calculate serializedstringListLength
      for (String string : stringList) {
        _String _String = new _String(string);
        byte[] serializedString = _String.serialize();
        byte[] stringLengthByteArray =
          DataLengthByteArrayMaker.getByteArray(serializedString.length);
        dataLength += stringLengthByteArray.length + serializedString.length;
      }
      byte[] serializedStringList = new byte[dataLength];
      for (String string : stringList) {
        _String _String = new _String(string);
        byte[] serializedString = _String.serialize();
        int serializedStringLength = serializedString.length;
        byte[] stringLengthByteArray =
          DataLengthByteArrayMaker.getByteArray(serializedStringLength);
        System.arraycopy(stringLengthByteArray, 0, serializedStringList, counter, stringLengthByteArray.length);
        counter += stringLengthByteArray.length;
        System.arraycopy(serializedString, 0, serializedStringList, counter, serializedString.length);
        counter += serializedString.length;
      }
      return serializedStringList;
    }
    return new byte[]{0};
  }

  //CHANGED
  public byte[] serializeWithLength() {
    byte[] serializedBytes = serialize();
    byte[] dataLengthInBytes = DataLengthByteArrayMaker.getByteArray(serializedBytes.length);
    byte[] output = new byte[serializedBytes.length + dataLengthInBytes.length];
    int c = 0;
    for(int i = 0 ; i < dataLengthInBytes.length ; i++){
      output[c++] = dataLengthInBytes[i];
    }
    for(int i = 0 ; i < serializedBytes.length ; i++){
      output[c++] = serializedBytes[i];
    }
    return output;
  }


  public void deserialize(byte[] serializedStringList) {
    if (serializedStringList.length != 0) {
      int counter = 0;
      int serializedStringByteArrayLength = 0;
      while (true) {
        if (counter == serializedStringList.length) {
          break;
        }
        int firstLengthByte = serializedStringList[counter];
        int numOfByteForLength = 1;
        if ((firstLengthByte & 0x80) == 0) {
          serializedStringByteArrayLength = serializedStringList[counter];
        } else {
          counter++;
          numOfByteForLength = firstLengthByte & 0x0f;
          byte[] serializedStringLengthByteArray = new byte[numOfByteForLength];
          int serializedDataWrapperLengthByteArrayCounter = 0;
          for (int i = counter; i < counter + numOfByteForLength; i++) {
            serializedStringLengthByteArray[serializedDataWrapperLengthByteArrayCounter++] = serializedStringList[i];
          }
          serializedStringByteArrayLength = ByteArrayToInteger.getInt(serializedStringLengthByteArray);
        }
        counter += numOfByteForLength;
        byte[] stringByteArray = new byte[serializedStringByteArrayLength];
        int stringByteArrayCounter = 0;
        for (int i = counter; i < counter + serializedStringByteArrayLength; i++) {
          stringByteArray[stringByteArrayCounter++] = serializedStringList[i];
        }
        counter += serializedStringByteArrayLength;
        _String _String = new _String();
        _String.deserialize(stringByteArray);
        stringList.add(_String.getValue());
      }
    }
  }
}