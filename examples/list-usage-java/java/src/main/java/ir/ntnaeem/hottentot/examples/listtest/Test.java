/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date: 
 * Name: 
 * Description:
 *   This file contains definition of an abstract service class.
 ******************************************************************/
package ir.ntnaeem.hottentot.examples.listtest;

import org.labcrypto.hottentot.helper.PDTSerializer;
import org.labcrypto.hottentot.helper.PDTDeserializer;
import org.labcrypto.hottentot.helper.ByteArrayToInteger;


public class Test {
  private int id;
  public void setId(int id) {
    this.id = id;
  }
  public int getId() {
    return id;
  }
  @Override 
  public String toString() { 
    return "Test{" + 
      "id = '" + id + '\'' + 
      "}"; 
  }
	
  public byte[] serialize() {
    byte[] serializedId = PDTSerializer.getInt32(id);
    byte[] output = new byte[serializedId.length];
    int counter = 0;
    //use a loop for every property
    for (int i = 0; i < serializedId.length; i++) {
      output[counter++] = serializedId[i];
    }
    return output;
  }
    
  public void deserialize(byte[] serializedByteArray) {
    if(serializedByteArray.length != 0){
      int counter = 0;
      int dataLength = 0;
      int numbersOfBytesForDataLength;
      //do for every property
    //id : int
    byte[] idByteArray = new byte[4];
    for(int i = 0 ; i < 4 ; i++){
      idByteArray[i] = serializedByteArray[counter++];
    }
    setId(PDTDeserializer.getInt32(idByteArray));

    }
  }
}
