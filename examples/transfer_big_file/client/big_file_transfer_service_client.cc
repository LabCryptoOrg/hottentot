/******************************************************************
 * Generated by Hottentot CC Generator
 * Date: 24-08-2016 11:09:22
 * Name: big_file_transfer_service_client.h
 * Description:
 *   This file contains a sample client.
 ******************************************************************/

#include <iostream>
#include <string>
#include <fstream>
#include <streambuf>

#include <org/labcrypto/hottentot/runtime/configuration.h>
#include <org/labcrypto/hottentot/runtime/logger.h>
#include <org/labcrypto/hottentot/runtime/utils.h>
#include <org/labcrypto/hottentot/runtime/proxy/proxy_runtime.h>


#include "../proxy/big_file_transfer_service.h"
#include "../proxy/big_file_transfer_service_proxy_builder.h"


int 
main(int argc, char **argv) {
  try {
    ::org::labcrypto::hottentot::runtime::Logger::Init();  
    ::org::labcrypto::hottentot::runtime::proxy::ProxyRuntime::Init(argc, argv);
    if (::org::labcrypto::hottentot::runtime::Configuration::Verbose()) {
      ::org::labcrypto::hottentot::runtime::Logger::GetOut() << 
        "[" << ::org::labcrypto::hottentot::runtime::Utils::GetCurrentUTCTimeString() << "]: " << 
          "Proxy runtime is initialized." << std::endl;
    }
    ::org::labcrypto::hottentot::examples::bigfiletransfer::proxy::BigFileTransferService *proxy = 
      ::org::labcrypto::hottentot::examples::bigfiletransfer::proxy::BigFileTransferServiceProxyBuilder::Create("127.0.0.1", 2000);
    if (::org::labcrypto::hottentot::runtime::Configuration::Verbose()) {
      ::org::labcrypto::hottentot::runtime::Logger::GetOut() << 
        "[" << ::org::labcrypto::hottentot::runtime::Utils::GetCurrentUTCTimeString() << "]: " << 
          "Proxy object is created." << std::endl;
    }
    try {
      // ====================================================
      std::ifstream t("../big.bin");
      std::string str((std::istreambuf_iterator<char>(t)), std::istreambuf_iterator<char>());
      ::org::labcrypto::hottentot::ByteArray fileData((unsigned char *)str.c_str(), str.size());
      ::org::labcrypto::hottentot::Utf8String fileName("copy.bin");
      ::org::labcrypto::hottentot::Boolean result;
      proxy->SendBigFile(fileData, fileName, result);
      ::org::labcrypto::hottentot::runtime::Logger::GetOut() << "Done with result: " << result << std::endl;
      // ====================================================
    } catch (std::runtime_error &e) {
      ::org::labcrypto::hottentot::runtime::Logger::GetError() << 
        "[" << ::org::labcrypto::hottentot::runtime::Utils::GetCurrentUTCTimeString() << "]: " << 
          e.what() << std::endl;
    }
    ::org::labcrypto::hottentot::examples::bigfiletransfer::proxy::BigFileTransferServiceProxyBuilder::Destroy(proxy);
    if (::org::labcrypto::hottentot::runtime::Configuration::Verbose()) {
      ::org::labcrypto::hottentot::runtime::Logger::GetOut() << 
        "[" << ::org::labcrypto::hottentot::runtime::Utils::GetCurrentUTCTimeString() << "]: " <<
          "Proxy object is destroyed." << std::endl;
    }
    ::org::labcrypto::hottentot::runtime::proxy::ProxyRuntime::Shutdown();
    if (::org::labcrypto::hottentot::runtime::Configuration::Verbose()) {
      ::org::labcrypto::hottentot::runtime::Logger::GetOut() << 
        "[" << ::org::labcrypto::hottentot::runtime::Utils::GetCurrentUTCTimeString() << "]: " <<
          "Proxy runtime is shutdown." << std::endl;
    }
    ::org::labcrypto::hottentot::runtime::Logger::Shutdown();  
  } catch (std::exception &e) {
    ::org::labcrypto::hottentot::runtime::proxy::ProxyRuntime::Shutdown();
    if (::org::labcrypto::hottentot::runtime::Configuration::Verbose()) {
      ::org::labcrypto::hottentot::runtime::Logger::GetOut() << 
        "[" << ::org::labcrypto::hottentot::runtime::Utils::GetCurrentUTCTimeString() << "]: " <<
          "Proxy runtime is shutdown." << std::endl;
    }
    ::org::labcrypto::hottentot::runtime::Logger::Shutdown();  
    ::org::labcrypto::hottentot::runtime::Logger::GetError() << 
        "[" << ::org::labcrypto::hottentot::runtime::Utils::GetCurrentUTCTimeString() << "]: " <<
          e.what() << std::endl;
    return 1;
  } catch (...) {
    ::org::labcrypto::hottentot::runtime::proxy::ProxyRuntime::Shutdown();
    if (::org::labcrypto::hottentot::runtime::Configuration::Verbose()) {
      ::org::labcrypto::hottentot::runtime::Logger::GetOut() << 
        "[" << ::org::labcrypto::hottentot::runtime::Utils::GetCurrentUTCTimeString() << "]: " <<
          "Proxy runtime is shutdown." << std::endl;
    }
    ::org::labcrypto::hottentot::runtime::Logger::Shutdown();  
    ::org::labcrypto::hottentot::runtime::Logger::GetError() << 
        "[" << ::org::labcrypto::hottentot::runtime::Utils::GetCurrentUTCTimeString() << "]: " <<           "Error." << std::endl;
    return 1;
  }
  return 0;
}
