/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date: 
 * Name: 
 * Description:
 *   
 ******************************************************************/
package ir.ntnaeem.hottentot.examples.echoer;

import java.util.List;

import org.labcrypto.hottentot.runtime.Argument;
import org.labcrypto.hottentot.runtime.Request;
import org.labcrypto.hottentot.runtime.RequestHandler;
import org.labcrypto.hottentot.runtime.Response;
import org.labcrypto.hottentot.runtime.Service;
import org.labcrypto.hottentot.runtime.config.Config;
import org.labcrypto.hottentot.runtime.exception.TcpClientConnectException;
import org.labcrypto.hottentot.runtime.exception.TcpClientReadException;
import org.labcrypto.hottentot.runtime.exception.TcpClientWriteException;


public class EchoRequestHandler extends RequestHandler {
  public EchoRequestHandler(Service service) {
    super(service);
  }
  @Override
  public Response handleRequest(Request request) throws TcpClientWriteException, TcpClientReadException, TcpClientConnectException {
    long methodId = request.getMethodId();
    EchoService echoImpl = (AbstractEchoService) service;
    if(methodId == 2482416905L){
      List <Argument> args = request.getArgs();
      Argument arg0 = args.get(0);
      byte[] serializedReq = arg0.getData();
      RequestMessage req = new RequestMessage();
      req.deserialize(serializedReq);
      ResponseMessage responseMessage = null;
      Response response = new Response();
      responseMessage = echoImpl.echoMessage(req);
      byte[] serializedResponseMessage;
      if(responseMessage == null){
        serializedResponseMessage  = new byte[0];
      }else{
      serializedResponseMessage = responseMessage.serialize();
      }
      response.setStatusCode((byte) 0);
      response.setData(serializedResponseMessage);
      response.setLength(serializedResponseMessage.length + 1);
      return response;
    }

    Response response = new Response();
    response.setStatusCode((byte) 255);
    response.setData(new byte[]{0});
    response.setLength(2);
    if(Config.isVerboseMode){
      System.out.println("WARN : method id is incorrect");
    }
    return response;
  }
}
