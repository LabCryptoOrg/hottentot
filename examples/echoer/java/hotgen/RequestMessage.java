/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date: 
 * Name: 
 * Description:
 *   This file contains definition of an abstract service class.
 ******************************************************************/
package ir.ntnaeem.hottentot.examples.echoer.hotgen;

import java.util.List;
import java.util.ArrayList;

import org.labcrypto.hottentot.helper.PDTSerializer;
import org.labcrypto.hottentot.helper.PDTDeserializer;
import org.labcrypto.hottentot.helper.ByteArrayToInteger;


public class RequestMessage {
  private String name = "";
  public void setName(String name) {
    this.name = name;
  }
  public String getName() {
    return name;
  }
  @Override 
  public String toString() { 
    return "RequestMessage{" + 
      "name = '" + name + '\'' + 
      "}"; 
  }
	
  public byte[] serialize() {
    byte[] serializedName = PDTSerializer.getString(name);
    byte[] output = new byte[serializedName.length];
    int counter = 0;
    //use a loop for every property
    for (int i = 0; i < serializedName.length; i++) {
      output[counter++] = serializedName[i];
    }
    return output;
  }
    
  public void deserialize(byte[] serializedByteArray) {
    if(serializedByteArray.length != 0){
      int counter = 0;
      int dataLength = 0;
      int numbersOfBytesForDataLength;
      //do for every property
    //name : String
    dataLength = 0;
    if (( serializedByteArray[counter] & 0x80) == 0 ) {
      dataLength = serializedByteArray[counter++];
    } else {
      numbersOfBytesForDataLength = serializedByteArray[counter++] & 0x0f;
      byte[] serializedByteArrayLength = new byte[numbersOfBytesForDataLength];
      for (byte i = 0; i < numbersOfBytesForDataLength; i++) {
        serializedByteArrayLength[i] = serializedByteArray[counter++];
      }
      dataLength = ByteArrayToInteger.getInt(serializedByteArrayLength);
    }
    byte[] nameByteArray = new byte[dataLength];
    System.arraycopy(serializedByteArray,counter,nameByteArray,0,dataLength);
    counter += dataLength;
    setName(PDTDeserializer.getString(nameByteArray));

    }
  }
}
