/******************************************************************
 * Generated by Hottentot CC Generator
 * Date: 24-03-2016 11:14:24
 * Name: hello_service_impl.cc
 * Description:
 *   This file contains empty implementation of sample stub.
 ******************************************************************/
 
#include <stdexcept>
#include <thread>

#include <naeem/hottentot/runtime/configuration.h>
#include <naeem/hottentot/runtime/logger.h>
#include <naeem/hottentot/runtime/utils.h>

#include "hello_service_impl.h"




namespace ir {
namespace ntnaeem {
namespace hottentot {
namespace examples {
namespace timeout_on_read {
  void
  HelloServiceImpl::OnInit() {
    // TODO: Called when service is initializing.
  }
  void
  HelloServiceImpl::OnShutdown() {
    // TODO: Called when service is shutting down.
  }
  void
  HelloServiceImpl::SayHelloTo(
      ::naeem::hottentot::runtime::types::Utf8String &name, 
      ::naeem::hottentot::runtime::types::Utf8String &out, 
      ::naeem::hottentot::runtime::service::HotContext &hotContext
  ) {
    if (::naeem::hottentot::runtime::Configuration::Verbose()) {
      ::naeem::hottentot::runtime::Logger::GetOut() << "HelloServiceImpl::SayHelloTo() is called." << std::endl;
    }
    std::string response = "Hello World " + name.ToStdString();
    out = response;
    // throw std::runtime_error("Exception is occurred!");
    // int x = 5 / 0;
    std::this_thread::sleep_for(std::chrono::seconds(10));
  }
} // END OF NAMESPACE timeout_on_read
} // END OF NAMESPACE examples
} // END OF NAMESPACE hottentot
} // END OF NAMESPACE ntnaeem
} // END OF NAMESPACE ir