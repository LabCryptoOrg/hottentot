/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date: 
 * Name: 
 * Description:
 *   This file contains definition of an abstract service class.
 ******************************************************************/
package example.generated;

import ir.ntnaeem.hottentot.serializerHelper.PDTSerializer;
import ir.ntnaeem.hottentot.serializerHelper.PDTDeserializer;
import ir.ntnaeem.hottentot.serializerHelper.ByteArrayToInteger;

public class DataWrapper {
  private byte[] digi;
  public void setDigi(byte[] digi) {
    this.digi = digi;
  }
  public byte[] getDigi() {
    return digi;
  }
  @Override 
  public String toString() { 
    return "DataWrapper{" + 
      "digi = '" + digi + '\'' + 
      "}"; 
  }
	
  public byte[] serialize() {
    byte[] serializedDigi = PDTSerializer.getData(digi);
    byte[] output = new byte[serializedDigi.length];
    int counter = 0;
    //use a loop for every property
    for (int i = 0; i < serializedDigi.length; i++) {
      output[counter++] = serializedDigi[i];
    }
    return output;
  }
    
  public void deserialize(byte[] serializedByteArray) {
    int counter = 0;
    int dataLength = 0;
    int numbersOfBytesForDataLength;
    //do for every property
    //digi : byte[]
    dataLength = 0;
    if(( serializedByteArray[counter] & 0x80) == 0 ) {
      dataLength = serializedByteArray[counter++];
    }else{
      numbersOfBytesForDataLength = serializedByteArray[counter++] & 0x0f;
      byte[] serializedByteArrayLength = new byte[numbersOfBytesForDataLength];
      for(byte i = 0 ; i < numbersOfBytesForDataLength ; i++){
        serializedByteArrayLength[i] = serializedByteArray[counter++];
      }
      dataLength = ByteArrayToInteger.getInt(serializedByteArrayLength);
    }
    byte[] digiByteArray = new byte[dataLength];
    System.arraycopy(serializedByteArray,counter,digiByteArray,0,dataLength);
    counter += dataLength;
    setDigi(digiByteArray);

  }
}
