/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date: 
 * Name: 
 * Description:
 *   This file contains definition of an abstract service class.
 ******************************************************************/
package example.generated.hotgen;

import ir.ntnaeem.hottentot.serializerHelper.PDTSerializer;
import ir.ntnaeem.hottentot.serializerHelper.PDTDeserializer;

public class Result {
  private byte ustatus8;
  private short ustatus16;
  private int ustatus32;
  private long ustatus64;
  private byte status8;
  private short status16;
  private int status32;
  private long status64;
  public void setUstatus8(byte ustatus8) {
    this.ustatus8 = ustatus8;
  }
  public byte getUstatus8() {
    return ustatus8;
  }
  public void setUstatus16(short ustatus16) {
    this.ustatus16 = ustatus16;
  }
  public short getUstatus16() {
    return ustatus16;
  }
  public void setUstatus32(int ustatus32) {
    this.ustatus32 = ustatus32;
  }
  public int getUstatus32() {
    return ustatus32;
  }
  public void setUstatus64(long ustatus64) {
    this.ustatus64 = ustatus64;
  }
  public long getUstatus64() {
    return ustatus64;
  }
  public void setStatus8(byte status8) {
    this.status8 = status8;
  }
  public byte getStatus8() {
    return status8;
  }
  public void setStatus16(short status16) {
    this.status16 = status16;
  }
  public short getStatus16() {
    return status16;
  }
  public void setStatus32(int status32) {
    this.status32 = status32;
  }
  public int getStatus32() {
    return status32;
  }
  public void setStatus64(long status64) {
    this.status64 = status64;
  }
  public long getStatus64() {
    return status64;
  }
  @Override 
  public String toString() { 
    return "Result{" + 
      "ustatus8 = '" + ustatus8 + '\'' + 
      ",ustatus16 = '" + ustatus16 + '\'' + 
      ",ustatus32 = '" + ustatus32 + '\'' + 
      ",ustatus64 = '" + ustatus64 + '\'' + 
      ",status8 = '" + status8 + '\'' + 
      ",status16 = '" + status16 + '\'' + 
      ",status32 = '" + status32 + '\'' + 
      ",status64 = '" + status64 + '\'' + 
      "}"; 
  }
	
  public byte[] serialize() {
    byte[] serializedUstatus8 = PDTSerializer.getInt8(ustatus8);
    byte[] serializedUstatus16 = PDTSerializer.getInt16(ustatus16);
    byte[] serializedUstatus32 = PDTSerializer.getInt32(ustatus32);
    byte[] serializedUstatus64 = PDTSerializer.getInt64(ustatus64);
    byte[] serializedStatus8 = PDTSerializer.getInt8(status8);
    byte[] serializedStatus16 = PDTSerializer.getInt16(status16);
    byte[] serializedStatus32 = PDTSerializer.getInt32(status32);
    byte[] serializedStatus64 = PDTSerializer.getInt64(status64);
    byte[] output = new byte[serializedUstatus8.length + serializedUstatus16.length + serializedUstatus32.length + serializedUstatus64.length + serializedStatus8.length + serializedStatus16.length + serializedStatus32.length + serializedStatus64.length];
    int counter = 0;
    //use a loop for every property
    for (int i = 0; i < serializedUstatus8.length; i++) {
      output[counter++] = serializedUstatus8[i];
    }
    for (int i = 0; i < serializedUstatus16.length; i++) {
      output[counter++] = serializedUstatus16[i];
    }
    for (int i = 0; i < serializedUstatus32.length; i++) {
      output[counter++] = serializedUstatus32[i];
    }
    for (int i = 0; i < serializedUstatus64.length; i++) {
      output[counter++] = serializedUstatus64[i];
    }
    for (int i = 0; i < serializedStatus8.length; i++) {
      output[counter++] = serializedStatus8[i];
    }
    for (int i = 0; i < serializedStatus16.length; i++) {
      output[counter++] = serializedStatus16[i];
    }
    for (int i = 0; i < serializedStatus32.length; i++) {
      output[counter++] = serializedStatus32[i];
    }
    for (int i = 0; i < serializedStatus64.length; i++) {
      output[counter++] = serializedStatus64[i];
    }
    return output;
  }
    
  public void deserialize(byte[] serializedByteArray) {
    if(serializedByteArray.length != 0){
      int counter = 0;
      int dataLength = 0;
      int numbersOfBytesForDataLength;
      //do for every property
    //ustatus8 : byte
    byte[] ustatus8ByteArray = new byte[1];
    for(int i = 0 ; i < 1 ; i++){
      ustatus8ByteArray[i] = serializedByteArray[counter++];
    }
    setUstatus8(PDTDeserializer.getInt8(ustatus8ByteArray));
    //ustatus16 : short
    byte[] ustatus16ByteArray = new byte[2];
    for(int i = 0 ; i < 2 ; i++){
      ustatus16ByteArray[i] = serializedByteArray[counter++];
    }
    setUstatus16(PDTDeserializer.getInt16(ustatus16ByteArray));
    //ustatus32 : int
    byte[] ustatus32ByteArray = new byte[4];
    for(int i = 0 ; i < 4 ; i++){
      ustatus32ByteArray[i] = serializedByteArray[counter++];
    }
    setUstatus32(PDTDeserializer.getInt32(ustatus32ByteArray));
    //ustatus64 : long
    byte[] ustatus64ByteArray = new byte[8];
    for(int i = 0 ; i < 8 ; i++){
      ustatus64ByteArray[i] = serializedByteArray[counter++];
    }
    setUstatus64(PDTDeserializer.getInt64(ustatus64ByteArray));
    //status8 : byte
    byte[] status8ByteArray = new byte[1];
    for(int i = 0 ; i < 1 ; i++){
      status8ByteArray[i] = serializedByteArray[counter++];
    }
    setStatus8(PDTDeserializer.getInt8(status8ByteArray));
    //status16 : short
    byte[] status16ByteArray = new byte[2];
    for(int i = 0 ; i < 2 ; i++){
      status16ByteArray[i] = serializedByteArray[counter++];
    }
    setStatus16(PDTDeserializer.getInt16(status16ByteArray));
    //status32 : int
    byte[] status32ByteArray = new byte[4];
    for(int i = 0 ; i < 4 ; i++){
      status32ByteArray[i] = serializedByteArray[counter++];
    }
    setStatus32(PDTDeserializer.getInt32(status32ByteArray));
    //status64 : long
    byte[] status64ByteArray = new byte[8];
    for(int i = 0 ; i < 8 ; i++){
      status64ByteArray[i] = serializedByteArray[counter++];
    }
    setStatus64(PDTDeserializer.getInt64(status64ByteArray));

    }
  }
}
