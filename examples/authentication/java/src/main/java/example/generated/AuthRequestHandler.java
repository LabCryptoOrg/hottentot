/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date: 
 * Name: 
 * Description:
 *   
 ******************************************************************/
package example.generated;

import ir.ntnaeem.hottentot.runtime.Argument;
import ir.ntnaeem.hottentot.runtime.Request;
import ir.ntnaeem.hottentot.runtime.RequestHandler;
import ir.ntnaeem.hottentot.runtime.Response;
import ir.ntnaeem.hottentot.runtime.Service;
import ir.ntnaeem.hottentot.runtime.exception.MethodNotSupportException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientConnectException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientReadException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientWriteException;
import ir.ntnaeem.hottentot.serializerHelper.PDTDeserializer;
import ir.ntnaeem.hottentot.serializerHelper.PDTSerializer;
import java.util.List;

public class AuthRequestHandler extends RequestHandler {
  public AuthRequestHandler(Service service) {
    super(service);
  }
  @Override
  public Response handleRequest(Request request) throws TcpClientWriteException, TcpClientReadException, TcpClientConnectException, MethodNotSupportException {
    long methodId = request.getMethodId();
    AuthService authImpl = (AbstractAuthService) service;

    if(methodId == 383471646L){
      List <Argument> args = request.getArgs();
      Argument arg0 = args.get(0);
      byte[] serializedCredential = arg0.getData();
      Credential credential = new Credential();
      credential.deserialize(serializedCredential);
      SerializableTokenList serializableTokenList = new SerializableTokenList();
      Response response = new Response();
      List<Token> tokenList = authImpl.auth(credential);
      serializableTokenList.setTokenList(tokenList);
      byte[] serializedTokenList = serializableTokenList.serialize();
      response.setStatusCode((byte) 100);
      response.setData(serializedTokenList);
      response.setLength(serializedTokenList.length + 1);
      return response;
    }
    if(methodId == 1248602371L){
      List <Argument> args = request.getArgs();
      Token token = null;
      Response response = new Response();
      token = authImpl.test();
      byte[] serializedToken = token.serialize();
      response.setStatusCode((byte) 100);
      response.setData(serializedToken);
      response.setLength(serializedToken.length + 1);
      return response;
    }

    throw new MethodNotSupportException("method id is incorrect");
  }
}
