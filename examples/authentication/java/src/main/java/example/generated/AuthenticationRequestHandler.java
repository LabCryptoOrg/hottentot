/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date: 
 * Name: 
 * Description:
 *   
 ******************************************************************/
package example.generated;

import ir.ntnaeem.hottentot.runtime.Argument;
import ir.ntnaeem.hottentot.runtime.Request;
import ir.ntnaeem.hottentot.runtime.RequestHandler;
import ir.ntnaeem.hottentot.runtime.Response;
import ir.ntnaeem.hottentot.runtime.Service;
import ir.ntnaeem.hottentot.runtime.exception.MethodNotSupportException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientConnectException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientReadException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientWriteException;
import ir.ntnaeem.hottentot.serializerHelper.PDTDeserializer;
import ir.ntnaeem.hottentot.serializerHelper.PDTSerializer;
import java.util.List;

public class AuthenticationRequestHandler extends RequestHandler {
  public AuthenticationRequestHandler(Service service) {
    super(service);
  }
  @Override
  public Response handleRequest(Request request) throws TcpClientWriteException, TcpClientReadException, TcpClientConnectException, MethodNotSupportException {
    long methodId = request.getMethodId();
    AuthenticationService authenticationImpl = (AbstractAuthenticationService) service;

    if(methodId == 2550194791L){
      List <Argument> args = request.getArgs();
      Argument arg0 = args.get(0);
      byte[] serializedCredential = arg0.getData();
      Credential credential = new Credential();
      credential.deserialize(serializedCredential);
      SerializableTokenList serializableTokenList = new SerializableTokenList();
      Response response = new Response();
      List<Token> tokenList = authenticationImpl.auth(credential);
      serializableTokenList.setTokenList(tokenList);
      byte[] serializedTokenList = serializableTokenList.serialize();
      response.setStatusCode((byte) 100);
      response.setData(serializedTokenList);
      response.setLength(serializedTokenList.length + 1);
      return response;
    }
    if(methodId == 3646353831L){
      List <Argument> args = request.getArgs();
      SerializableDataWrapperList serializableDataWrapperList = new SerializableDataWrapperList();
      Response response = new Response();
      List<DataWrapper> datawrapperList = authenticationImpl.test();
      serializableDataWrapperList.setDataWrapperList(datawrapperList);
      byte[] serializedDataWrapperList = serializableDataWrapperList.serialize();
      response.setStatusCode((byte) 100);
      response.setData(serializedDataWrapperList);
      response.setLength(serializedDataWrapperList.length + 1);
      return response;
    }
    if(methodId == 17562162L){
      List <Argument> args = request.getArgs();
      SerializableStringWrapperList serializableStringWrapperList = new SerializableStringWrapperList();
      Response response = new Response();
      List<StringWrapper> stringwrapperList = authenticationImpl.test2();
      serializableStringWrapperList.setStringWrapperList(stringwrapperList);
      byte[] serializedStringWrapperList = serializableStringWrapperList.serialize();
      response.setStatusCode((byte) 100);
      response.setData(serializedStringWrapperList);
      response.setLength(serializedStringWrapperList.length + 1);
      return response;
    }
    if(methodId == 1467434780L){
      List <Argument> args = request.getArgs();
      StringWrapper stringWrapper = null;
      Response response = new Response();
      stringWrapper = authenticationImpl.test3();
      byte[] serializedStringWrapper = stringWrapper.serialize();
      response.setStatusCode((byte) 100);
      response.setData(serializedStringWrapper);
      response.setLength(serializedStringWrapper.length + 1);
      return response;
    }
    if(methodId == 269734079L){
      List <Argument> args = request.getArgs();
      DataWrapper dataWrapper = null;
      Response response = new Response();
      dataWrapper = authenticationImpl.test4();
      byte[] serializedDataWrapper = dataWrapper.serialize();
      response.setStatusCode((byte) 100);
      response.setData(serializedDataWrapper);
      response.setLength(serializedDataWrapper.length + 1);
      return response;
    }

    throw new MethodNotSupportException("method id is incorrect");
  }
}
