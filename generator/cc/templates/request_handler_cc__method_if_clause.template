[[[INDENT]]][[[INDENT]]]if (request.GetMethodId() == [[[METHOD_HASH]]]) {
[[[INDENT]]][[[INDENT]]][[[INDENT]]][[[NAMESPACE]]]::service::Abstract[[[CAMEL_CASE_FC_SERVICE_NAME]]] *serviceObject = 
[[[INDENT]]][[[INDENT]]][[[INDENT]]][[[INDENT]]]dynamic_cast< [[[NAMESPACE]]]::service::Abstract[[[CAMEL_CASE_FC_SERVICE_NAME]]]*>(service_);
[[[INDENT]]][[[INDENT]]][[[INDENT]]]/*
[[[INDENT]]][[[INDENT]]][[[INDENT]]] * Deserialization and making input variables
[[[INDENT]]][[[INDENT]]][[[INDENT]]] */
[[[INPUT_VARIABLES]]][[[INDENT]]][[[INDENT]]][[[INDENT]]]/*
[[[INDENT]]][[[INDENT]]][[[INDENT]]] * Calling service method
[[[INDENT]]][[[INDENT]]][[[INDENT]]] */
[[[INDENT]]][[[INDENT]]][[[INDENT]]]::naeem::hottentot::runtime::service::HotContext hotContext;
[[[INDENT]]][[[INDENT]]][[[INDENT]]]
[[[METHOD_CALL]]]
[[[INDENT]]][[[INDENT]]][[[INDENT]]]} catch (std::exception &e) {
[[[INDENT]]][[[INDENT]]][[[INDENT]]][[[INDENT]]]hotContext.SetFaultyResponse(e.what(), 50);
[[[INDENT]]][[[INDENT]]][[[INDENT]]]} catch (...) {
[[[INDENT]]][[[INDENT]]][[[INDENT]]][[[INDENT]]]hotContext.SetFaultyResponse("Unknown server side exception.", 51);
[[[INDENT]]][[[INDENT]]][[[INDENT]]]}
[[[INDENT]]][[[INDENT]]][[[INDENT]]]/*
[[[INDENT]]][[[INDENT]]][[[INDENT]]] * Serializiation of returned object
[[[INDENT]]][[[INDENT]]][[[INDENT]]] */
[[[INDENT]]][[[INDENT]]][[[INDENT]]]unsigned char *serializedData = 0;
[[[INDENT]]][[[INDENT]]][[[INDENT]]]uint32_t serializedDataLength = 0;
[[[RESULT_SERIALIZATION]]][[[INDENT]]][[[INDENT]]][[[INDENT]]]response.SetStatusCode(hotContext.GetResponseStatusCode());
[[[INDENT]]][[[INDENT]]][[[INDENT]]]response.SetData(serializedData);
[[[INDENT]]][[[INDENT]]][[[INDENT]]]response.SetDataLength(serializedDataLength);
[[[INDENT]]][[[INDENT]]][[[INDENT]]]return;
[[[INDENT]]][[[INDENT]]]}