/******************************************************************
 * Generated by Hottentot CC Generator
 * Date: 11-02-2016 01:32:49
 * Name: date_time.cc
 * Description:
 *   This file contains implementation of DateTime class.
 ******************************************************************/

#include <iostream>
#include <string.h>

#include <naeem/hottentot/runtime/hot_ptr.h>

#include "date_time.h"


namespace example {
namespace generated {
namespace abc {
namespace xyz {
  DateTime::DateTime(const DateTime &other) {
    year_ = other.year_;
    month_ = other.month_;
    day_ = other.day_;
  }
  DateTime::DateTime(DateTime *other) {
    year_ = other->year_;
    month_ = other->month_;
    day_ = other->day_;
  }
  unsigned char *
  DateTime::Serialize(uint32_t *length_ptr) {
    uint32_t totalLength = 0;
    uint32_t length0 = 0;
    ::naeem::hottentot::runtime::HotPtr<unsigned char, true> ptr0 = 
      year_.Serialize(&length0);
    totalLength += length0;
    uint32_t length1 = 0;
    ::naeem::hottentot::runtime::HotPtr<unsigned char, true> ptr1 = 
      month_.Serialize(&length1);
    totalLength += length1;
    uint32_t length2 = 0;
    ::naeem::hottentot::runtime::HotPtr<unsigned char, true> ptr2 = 
      day_.Serialize(&length2);
    totalLength += length2;
    unsigned char *data = new unsigned char[totalLength];
    uint32_t c = 0;
    unsigned char *data0 = ptr0.Get();
    for (uint32_t i = 0; i < length0; i++) {
      data[c++] = data0[i];
    }
    unsigned char *data1 = ptr1.Get();
    for (uint32_t i = 0; i < length1; i++) {
      data[c++] = data1[i];
    }
    unsigned char *data2 = ptr2.Get();
    for (uint32_t i = 0; i < length2; i++) {
      data[c++] = data2[i];
    }
    if (c != totalLength) {
      std::cout << "Struct Serialization: Inconsistency in length of serialized byte array." << std::endl;
      exit(1);
    };
    if (length_ptr) {
      *length_ptr = totalLength;
    }
    return data;
  }
  void
  DateTime::Deserialize(unsigned char *data, uint32_t length) {
    uint32_t c = 0, elength = 0;
    year_.Deserialize(data + c, 1);
    c += 1;
    month_.Deserialize(data + c, 1);
    c += 1;
    day_.Deserialize(data + c, 1);
    c += 1;
    if (c != length) {
      std::cout << "Struct Deserialization: Inconsistency in length of deserialized byte array." << std::endl;
      exit(1);
    };
  }
} // END OF NAMESPACE xyz
} // END OF NAMESPACE abc
} // END OF NAMESPACE generated
} // END OF NAMESPACE example