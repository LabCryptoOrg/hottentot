/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date: 
 * Name: 
 * Description:
 *   This file contains definition of an abstract service class.
 ******************************************************************/
package example.generated.abc.xyz.hotgen;

import ir.ntnaeem.hottentot.serializerHelper.PDTSerializer;
import ir.ntnaeem.hottentot.serializerHelper.PDTDeserializer;
import ir.ntnaeem.hottentot.serializerHelper.ByteArrayToInteger;

public class DateTime {
  private byte year;
  private byte month;
  private byte day;
  public void setYear(byte year) {
    this.year = year;
  }
  public byte getYear() {
    return year;
  }
  public void setMonth(byte month) {
    this.month = month;
  }
  public byte getMonth() {
    return month;
  }
  public void setDay(byte day) {
    this.day = day;
  }
  public byte getDay() {
    return day;
  }
  @Override 
  public String toString() { 
    return "DateTime{" + 
      "year = '" + year + '\'' + 
      ",month = '" + month + '\'' + 
      ",day = '" + day + '\'' + 
      "}"; 
  }
	
  public byte[] serialize() {
    byte[] serializedYear = PDTSerializer.getInt8(year);
    byte[] serializedMonth = PDTSerializer.getInt8(month);
    byte[] serializedDay = PDTSerializer.getInt8(day);
    byte[] output = new byte[serializedYear.length + serializedMonth.length + serializedDay.length];
    int counter = 0;
    //use a loop for every property
    for (int i = 0; i < serializedYear.length; i++) {
      output[counter++] = serializedYear[i];
    }
    for (int i = 0; i < serializedMonth.length; i++) {
      output[counter++] = serializedMonth[i];
    }
    for (int i = 0; i < serializedDay.length; i++) {
      output[counter++] = serializedDay[i];
    }
    return output;
  }
    
  public void deserialize(byte[] serializedByteArray) {
    if(serializedByteArray.length != 0){
      int counter = 0;
      int dataLength = 0;
      int numbersOfBytesForDataLength;
      //do for every property
    //year : byte
    byte[] yearByteArray = new byte[1];
    for(int i = 0 ; i < 1 ; i++){
      yearByteArray[i] = serializedByteArray[counter++];
    }
    setYear(PDTDeserializer.getInt8(yearByteArray));
    //month : byte
    byte[] monthByteArray = new byte[1];
    for(int i = 0 ; i < 1 ; i++){
      monthByteArray[i] = serializedByteArray[counter++];
    }
    setMonth(PDTDeserializer.getInt8(monthByteArray));
    //day : byte
    byte[] dayByteArray = new byte[1];
    for(int i = 0 ; i < 1 ; i++){
      dayByteArray[i] = serializedByteArray[counter++];
    }
    setDay(PDTDeserializer.getInt8(dayByteArray));

    }
  }
}
