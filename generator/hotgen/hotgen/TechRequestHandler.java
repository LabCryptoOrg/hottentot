/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date: 
 * Name: 
 * Description:
 *   
 ******************************************************************/
package ir.ntnaeem.hottentot.examples.tech.hotgen;

import ir.ntnaeem.hottentot.runtime.Argument;
import ir.ntnaeem.hottentot.runtime.Request;
import ir.ntnaeem.hottentot.runtime.RequestHandler;
import ir.ntnaeem.hottentot.runtime.Response;
import ir.ntnaeem.hottentot.runtime.Service;
import ir.ntnaeem.hottentot.runtime.config.Config;
import ir.ntnaeem.hottentot.runtime.exception.MethodNotSupportException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientConnectException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientReadException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientWriteException;
import ir.ntnaeem.hottentot.serializerHelper.PDTDeserializer;
import ir.ntnaeem.hottentot.serializerHelper.PDTSerializer;
import java.util.List;

public class TechRequestHandler extends RequestHandler {
  public TechRequestHandler(Service service) {
    super(service);
  }
  @Override
  public Response handleRequest(Request request) throws TcpClientWriteException, TcpClientReadException, TcpClientConnectException, MethodNotSupportException {
    long methodId = request.getMethodId();
    TechService techImpl = (AbstractTechService) service;
    if(methodId == 3912715844L){
      List <Argument> args = request.getArgs();
      Argument arg0 = args.get(0);
      byte[] serializedMessage = arg0.getData();
      String message = PDTDeserializer.getString(serializedMessage);
      Response response = new Response();
      techImpl.report(message);
      response.setStatusCode((byte) 0);
      response.setData(new byte[]{0});
      response.setLength(0);
      return response;
    }
    if(methodId == 2183351020L){
      List <Argument> args = request.getArgs();
      Response response = new Response();
      short result = techImpl.getSerial();
      byte[] serializedResult = PDTSerializer.getInt16( result );
      response.setStatusCode((byte) 0);
      response.setData(serializedResult);
      response.setLength(serializedResult.length + 1);
      return response;
    }

    Response response = new Response();
    response.setStatusCode((byte) 255);
    response.setData(new byte[]{0});
    response.setLength(2);
    if(Config.isVerboseMode){
      System.out.println("WARN : method id is incorrect");
    }
    return response;
  }
}
