/******************************************************************
 * Generated by Hottentot JAVA Generator
 * Date: 
 * Name: 
 * Description:
 *   This file contains definition of an abstract service class.
 ******************************************************************/
package [%BASE_PACKAGE_NAME%];

import ir.ntnaeem.hottentot.runtime.Argument;
import ir.ntnaeem.hottentot.runtime.Request;
import ir.ntnaeem.hottentot.runtime.RequestHandler;
import ir.ntnaeem.hottentot.runtime.Response;
import ir.ntnaeem.hottentot.runtime.Service;
import ir.ntnaeem.hottentot.runtime.exception.MethodNotSupportException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientConnectException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientReadException;
import ir.ntnaeem.hottentot.runtime.exception.TcpClientWriteException;
import ir.ntnaeem.hottentot.serializerHelper.PDTDeserializer;
import ir.ntnaeem.hottentot.serializerHelper.PDTSerializer;
import java.util.List;

public class [%SERVICE_NAME%]RequestHandler extends RequestHandler {
[%INDENT%]public [%SERVICE_NAME%]RequestHandler(Service service) {
[%INDENT%][%INDENT%]super(service);
[%INDENT%]}
[%INDENT%]@Override
[%INDENT%]public Response handleRequest(Request request) throws TcpClientWriteException, TcpClientReadException, TcpClientConnectException, MethodNotSupportException {
[%INDENT%][%INDENT%]long methodId = request.getMethodId();
[%INDENT%][%INDENT%][%SERVICE_NAME%]Service [%SERVICE_NAME_LOWERCASE%]Impl = (Abstract[%SERVICE_NAME%]Service) service;

[%METHOD_CONDITIONS%]
[%INDENT%][%INDENT%]throw new MethodNotSupportException("method id is incorrect");
[%INDENT%]}
}
